apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-proxy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx-proxy
  template:
    metadata:
      labels:
        app: nginx-proxy
    spec:
      containers:
      - name: nginx
        image: rafaelviola/nginx-proxy:latest
        ports:
        - containerPort: 80
        volumeMounts:
          - name: nginx-config-volume
            mountPath: /etc/nginx/nginx.conf
            subPath: nginx.conf
      volumes:
        - name: nginx-config-volume
          configMap:
            name: nginx-config

---
apiVersion: v1
kind: Service
metadata:
  name: nginx-proxy
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb" # or "elb" for a classic load balancer
    service.beta.kubernetes.io/aws-load-balancer-arn: "arn:aws:elasticloadbalancing:us-east-1:899738441980:loadbalancer/net/ae529de1553534e7c91bb44580a68567/72fd2e4d8f41c34a"
spec:
  selector:
    app: nginx-proxy
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: LoadBalancer

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
data:
  nginx.conf: |
    http {
        upstream onetimesecret {
            server onetimesecret.default.svc.cluster.local:80;
        }

        upstream wikils {
            server wikils.default.svc.cluster.local:80;
        }

        upstream plik {
            server plik.default.svc.cluster.local:80;
        }

        upstream ejbca {
            server ejbcace.default.svc.cluster.local:80;
        }

        server {
            listen 80; # listen on all interfaces

            location /onetimesecret {
                proxy_pass http://onetimesecret;
            }

            location /wikils {
                proxy_pass http://wikils;
            }

            location /plik {
                proxy_pass http://plik;
            }

            location /ejbca {
                proxy_pass http://ejbcace;
            }
        }
    }